rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper function to check authentication
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check file size (max 5MB)
    function isValidSize() {
      return request.resource.size < 5 * 1024 * 1024;
    }
    
    // Helper function to check if file is an image
    function isImage() {
      return request.resource.contentType.matches('image/.*');
    }
    
    // Profile pictures
    match /profile_pictures/{userId}.jpg {
      // Anyone authenticated can read profile pictures
      allow read: if isAuthenticated();
      // Users can only write to their own profile picture
      allow write: if isAuthenticated() 
        && request.auth.uid == userId 
        && isValidSize() 
        && isImage();
    }
    
    // Chat images
    match /chat_images/{chatId}/{imageId} {
      // Anyone authenticated can read chat images
      allow read: if isAuthenticated();
      // Anyone authenticated can upload chat images (chat permissions handled in Firestore)
      allow write: if isAuthenticated() && isValidSize() && isImage();
    }
    
    // Group images
    match /group_images/{groupId}.jpg {
      // Anyone authenticated can read group images
      allow read: if isAuthenticated();
      // Anyone authenticated can write (group permissions handled in Firestore)
      allow write: if isAuthenticated() && isValidSize() && isImage();
    }
  }
}

